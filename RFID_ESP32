from mfcr522 import MFRC522
from i2c_lcd import I2cLcd
from machine import Pin
from machine import SoftI2C
from machine import SPI
from machine import Pin,PWM
from servo import Servo
import network, time, urequests

def conectaWifi (red, password):
      global miRed
      miRed = network.WLAN(network.STA_IF)     
      if not miRed.isconnected():              #Si no está conectado…
          miRed.active(True)                   #activa la interface
          miRed.connect(red, password)         #Intenta conectar con la red
          print('Conectando a la red', red +"…")
          timeout = time.time ()
          while not miRed.isconnected():           #Mientras no se conecte..
                if (time.ticks_diff (time.time (), timeout) > 10):
                  return False
      return True

if conectaWifi ("Red-UPTap", "UPTAP#572364"):

    print ("Conexión exitosa!")
    print('Datos de la red (IP/netmask/gw/DNS):', miRed.ifconfig())
      
    url = "https://api.thingspeak.com/update?api_key=OHD6JZ6WNYTV4G5P"
else:
    print ("Imposible conectar")
    miRed.active (False)
    


DEFAULT_I2C_ADDR = 0x27
i2c = SoftI2C(scl=Pin(22, Pin.OUT, Pin.PULL_UP),
              sda=Pin(21, Pin.OUT, Pin.PULL_UP),
              freq=400000)
lcd = I2cLcd(i2c, DEFAULT_I2C_ADDR, 2, 16)
spi = SPI(2, baudrate=2500000, polarity=0, phase=0)
spi.init()
motor = Servo(pin=13)
rdr = MFRC522(spi=spi, gpioRst=4, gpioCs=5)
rfid_name = ["Luis",
             "Dr.Adolfo",
             "Mtro.Pedro",
             "Student2",
             "Student3"]
rfid_uid = ["0x73472c2f",
            "0xb37505fb",
            "0x11f1231d",
            "0x29eec498",
            "0x59e1f097"]

def get_username(uid):
    try:
        index = rfid_uid.index(uid)
        return rfid_name[index]
    except ValueError:
        print("RFID is not recognized")
        return None

print("Coloque Tarjeta")

lcd.clear()
lcd.move_to(0, 0)
lcd.putstr("Hola, por favor registre su ID")

while True:
    (stat, tag_type) = rdr.request(rdr.REQIDL)
    if stat == rdr.OK:
        (stat, raw_uid) = rdr.anticoll()
        if stat == rdr.OK:
            lcd.clear()
            lcd.move_to(0, 0)
            lcd.putstr("RFID: ")
            
            card_id = "0x%02x%02x%02x%02x" % (raw_uid[0], raw_uid[1], raw_uid[2], raw_uid[3])
            print("UID:", card_id)
            lcd.putstr(card_id)

            username = get_username(card_id)
            lcd.move_to(0, 1)
            if username is not None:
                lcd.putstr("Adios, {}".format(username))
                motor.move(90)
                time.sleep(7)
                motor.move(0)
            else:
                lcd.putstr("Acceso denegado!")

            # Esperar unos segundos antes de borrar la pantalla y mostrar "Registrar RFID" nuevamente
            time.sleep(0)
            lcd.clear()
            lcd.move_to(0, 0)
            lcd.putstr("Hola, por favor registre su ID")
            
            respuesta = urequests.get(url+"&field1="+str(username))
            print(respuesta.text)
            print (respuesta.status_code)
            respuesta.close ()
